import React from 'react'
import { useHistory } from 'react-router-dom'
import { Button, TextField, Typography } from '@mui/material'
import * as yup from 'yup'
import "./Adduser.css";
import { useFormik } from 'formik'
import { Dashboard } from '../Dashboard/Dashboard'



export const userValidationSchema = yup.object({
  name : yup.string().required("Please fill in  Name..."),
  email : yup.string().required("Please fill in  email..."),

})


const Adduser = ({User,setUser}) => {

 const history = useHistory();

 
 const {values, handleChange, handleSubmit, handleBlur, errors, touched} = useFormik({
  initialValues : {
name : "",
  email : "",
  },
  validationSchema : userValidationSchema,
  onSubmit : (newUsers) => {
    adddata(newUsers);
  }
})

           //function for adding 
           const adddata = async (newUsers)=>{
        
                  try{
                const response = await fetch(`https://bulkemailtooltsr.onrender.com/adduser`,{
                            method:"POST",
                            body : JSON.stringify(newUsers),
                            headers: {
                             "Content-Type":"application/json"
                            },
                           });
            
                          const Sdata = await response.json()
                          console.log(Sdata);
                           
                         setUser([...User,Sdata])
                      
                           history.push("/Userdashboard")
                        
                  }
                  catch(error){
                console.log(error);
                  }
            
              };
   


              return (
               <Dashboard>

                       <div className="input">

                    
                               <form onSubmit={handleSubmit}>
                               <Typography component="h1" variant="h5">  Add Clients  </Typography>
                               <TextField
                           fullWidth label="Enter the Name" 
                           id="fullWidth" onChange={handleChange} 
                           value={values.name} 
                            name="name"
                            onBlur= {handleBlur}
                            />
                              {touched.name && errors.name? <p style={{color:"red"}}> {errors.name} </p>: ""}
              
                        
                              <TextField
                           fullWidth label="Enter the email" 
                           id="fullWidth" onChange={handleChange} 
                           value={values.email} 
                            name="email"
                            onBlur= {handleBlur}
                            />
                              {touched.email && errors.email ? <p style={{color:"red"}}> {errors.email} </p>: ""}
              
                          <Button className="add-btn" type="submit" variant="contained" color="success">ADD</Button>
                      
                               </form>
                          </div>
               </Dashboard>
             
                )
}

export default Adduser